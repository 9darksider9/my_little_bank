{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/FakeBankingApp/frontend/src/components/LoginSignup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, VStack, Heading, RadioGroup, Radio, Stack } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSignup = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState('parent');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would typically make an API call to authenticate the user\n    // For now, we'll just simulate a successful login\n    onLogin(userType);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    maxWidth: \"400px\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      as: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        children: \"Login / Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        as: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          as: \"legend\",\n          children: \"Account Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          onChange: value => setUserType(value),\n          value: userType,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Radio, {\n              value: \"parent\",\n              children: \"Parent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              value: \"child\",\n              children: \"Child\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        colorScheme: \"blue\",\n        width: \"full\",\n        children: \"Login / Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"pxLbJrmE3TRhcPBFgZlKOfRnwi4=\");\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Input","VStack","Heading","RadioGroup","Radio","Stack","jsxDEV","_jsxDEV","LoginSignup","onLogin","_s","username","setUsername","password","setPassword","userType","setUserType","handleSubmit","e","preventDefault","width","maxWidth","children","spacing","as","onSubmit","size","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","direction","colorScheme","_c","$RefreshReg$"],"sources":["/home/ubuntu/FakeBankingApp/frontend/src/components/LoginSignup.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, VStack, Heading, RadioGroup, Radio, Stack } from '@chakra-ui/react';\n\ninterface LoginSignupProps {\n  onLogin: (type: 'parent' | 'child') => void;\n}\n\nconst LoginSignup: React.FC<LoginSignupProps> = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState<'parent' | 'child'>('parent');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Here you would typically make an API call to authenticate the user\n    // For now, we'll just simulate a successful login\n    onLogin(userType);\n  };\n\n  return (\n    <Box width=\"100%\" maxWidth=\"400px\">\n      <VStack spacing={4} as=\"form\" onSubmit={handleSubmit}>\n        <Heading size=\"lg\">Login / Sign Up</Heading>\n        <FormControl>\n          <FormLabel>Username</FormLabel>\n          <Input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Password</FormLabel>\n          <Input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </FormControl>\n        <FormControl as=\"fieldset\">\n          <FormLabel as=\"legend\">Account Type</FormLabel>\n          <RadioGroup onChange={(value) => setUserType(value as 'parent' | 'child')} value={userType}>\n            <Stack direction=\"row\">\n              <Radio value=\"parent\">Parent</Radio>\n              <Radio value=\"child\">Child</Radio>\n            </Stack>\n          </RadioGroup>\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\n          Login / Sign Up\n        </Button>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default LoginSignup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}