{"ast":null,"code":"import React,{useState,useEffect}from'react';import{ChakraProvider,Box}from'@chakra-ui/react';import{motion}from'framer-motion';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import LandingPage from'./components/LandingPage';import LoginSignup from'./components/LoginSignup';import FamilyView from'./components/FamilyView';import ChildView from'./components/ChildView';// TODO: Import BACKEND_URL from config.js when it's available\n// import { BACKEND_URL } from './config';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MotionBox=motion(Box);function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[userType,setUserType]=useState(null);useEffect(()=>{console.log('My Little Bank App component mounted');document.title='My Little Bank';},[]);console.log('Rendering My Little Bank App component',{isLoggedIn,userType});// TODO: Use BACKEND_URL for API calls once the backend is deployed\nreturn/*#__PURE__*/_jsx(ChakraProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(MotionBox,{minHeight:\"100vh\",initial:{opacity:0},animate:{opacity:1},transition:{duration:0.5},children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginSignup,{onLogin:type=>{console.log('Login attempted',{type});setIsLoggedIn(true);setUserType(type);}})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isLoggedIn?userType==='parent'?/*#__PURE__*/_jsx(FamilyView,{}):/*#__PURE__*/_jsx(ChildView,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})})]})})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","ChakraProvider","Box","motion","BrowserRouter","Router","Route","Routes","Navigate","LandingPage","LoginSignup","FamilyView","ChildView","jsx","_jsx","jsxs","_jsxs","MotionBox","App","isLoggedIn","setIsLoggedIn","userType","setUserType","console","log","document","title","children","minHeight","initial","opacity","animate","transition","duration","path","element","onLogin","type","to","replace"],"sources":["/home/ubuntu/FakeBankingApp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ChakraProvider, Box } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LandingPage from './components/LandingPage';\nimport LoginSignup from './components/LoginSignup';\nimport FamilyView from './components/FamilyView';\nimport ChildView from './components/ChildView';\n// TODO: Import BACKEND_URL from config.js when it's available\n// import { BACKEND_URL } from './config';\n\nconst MotionBox = motion(Box);\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userType, setUserType] = useState<'parent' | 'child' | null>(null);\n\n  useEffect(() => {\n    console.log('My Little Bank App component mounted');\n    document.title = 'My Little Bank';\n  }, []);\n\n  console.log('Rendering My Little Bank App component', { isLoggedIn, userType });\n\n  // TODO: Use BACKEND_URL for API calls once the backend is deployed\n\n  return (\n    <ChakraProvider>\n      <Router>\n        <MotionBox\n          minHeight=\"100vh\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"/login\" element={\n              <LoginSignup onLogin={(type) => {\n                console.log('Login attempted', { type });\n                setIsLoggedIn(true);\n                setUserType(type);\n              }} />\n            } />\n            <Route\n              path=\"/dashboard\"\n              element={\n                isLoggedIn\n                  ? (userType === 'parent' ? <FamilyView /> : <ChildView />)\n                  : <Navigate to=\"/login\" replace />\n              }\n            />\n          </Routes>\n        </MotionBox>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,cAAc,CAAEC,GAAG,KAAQ,kBAAkB,CACtD,OAASC,MAAM,KAAQ,eAAe,CACtC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,KAAM,CAAAC,SAAS,CAAGd,MAAM,CAACD,GAAG,CAAC,CAE7B,QAAS,CAAAgB,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACsB,QAAQ,CAAEC,WAAW,CAAC,CAAGvB,QAAQ,CAA4B,IAAI,CAAC,CAEzEC,SAAS,CAAC,IAAM,CACduB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnDC,QAAQ,CAACC,KAAK,CAAG,gBAAgB,CACnC,CAAC,CAAE,EAAE,CAAC,CAENH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAE,CAAEL,UAAU,CAAEE,QAAS,CAAC,CAAC,CAE/E;AAEA,mBACEP,IAAA,CAACb,cAAc,EAAA0B,QAAA,cACbb,IAAA,CAACT,MAAM,EAAAsB,QAAA,cACLb,IAAA,CAACG,SAAS,EACRW,SAAS,CAAC,OAAO,CACjBC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAE,CACxBC,OAAO,CAAE,CAAED,OAAO,CAAE,CAAE,CAAE,CACxBE,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAAN,QAAA,cAE9BX,KAAA,CAACT,MAAM,EAAAoB,QAAA,eACLb,IAAA,CAACR,KAAK,EAAC4B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAErB,IAAA,CAACL,WAAW,GAAE,CAAE,CAAE,CAAC,cAC5CK,IAAA,CAACR,KAAK,EAAC4B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAC1BrB,IAAA,CAACJ,WAAW,EAAC0B,OAAO,CAAGC,IAAI,EAAK,CAC9Bd,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAE,CAAEa,IAAK,CAAC,CAAC,CACxCjB,aAAa,CAAC,IAAI,CAAC,CACnBE,WAAW,CAACe,IAAI,CAAC,CACnB,CAAE,CAAE,CACL,CAAE,CAAC,cACJvB,IAAA,CAACR,KAAK,EACJ4B,IAAI,CAAC,YAAY,CACjBC,OAAO,CACLhB,UAAU,CACLE,QAAQ,GAAK,QAAQ,cAAGP,IAAA,CAACH,UAAU,GAAE,CAAC,cAAGG,IAAA,CAACF,SAAS,GAAE,CAAC,cACvDE,IAAA,CAACN,QAAQ,EAAC8B,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CACpC,CACF,CAAC,EACI,CAAC,CACA,CAAC,CACN,CAAC,CACK,CAAC,CAErB,CAEA,cAAe,CAAArB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}